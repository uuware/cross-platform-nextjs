name: Build

# git tag v1.0.1
# git push origin --tags
on:
 push:
   tags:
     - v[0-9]+.[0-9]+.[0-9]+*

jobs:

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
  
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      # - name: get-npm-version
      #   id: package-version
      #   uses: martinbeentjes/npm-get-version-action@master
      - run: npm i
      - run: npm run app:export

      # or run this to avoid publish: "electron-builder --linux --config configuration/builder.json --publish=never",
      - name: build windows app
        if: matrix.os == 'windows-latest'
        continue-on-error: true
        run: npm run build:win
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build linux app
        if: matrix.os == 'ubuntu-latest'
        continue-on-error: true
        run: npm run build:linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build macos app
        if: matrix.os == 'macos-latest'
        continue-on-error: true
        run: npm run build:mac
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: list
        if: matrix.os == 'windows-latest'
        continue-on-error: true
        run: dir dist

      - name: list
        #if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: ls -l dist

      - name: cleanup artifacts
        run: |
            npx rimraf "dist/win-unpacked"
            npx rimraf "dist/win-arm64-unpacked"
            npx rimraf "dist/linux-unpacked"
            npx rimraf "dist/linux-arm64-unpacked"
            npx rimraf "dist/mac"
            npx rimraf "dist/mac-arm64"
            npx rimraf "ios"
            npx rimraf "android"
            npx rimraf "dist/*.blockmap"
            npx rimraf "dist/*.yaml"
            npx rimraf "dist/*.yml"

      - name: list again
        run: ls -l dist

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cross-platform-nextjs
          path: dist
          # path: release/icons-font-desktop-${{ steps.package-version.outputs.current-version }}.exe

      # - name: release
      #   uses: softprops/action-gh-release@v1
      #   # If the commit is tagged with a version (e.g. "v1.0.0"),
      #   # release the app after building
      #   # if: startsWith(github.ref, 'refs/tags/v')
      #   # with:
      #     # draft: true
      #     # files: "dist/**"
      #   env:
      #     # GitHub token, automatically provided to the action
      #     # (No need to define this secret in the repo settings)
      #     GITHUB_TOKEN: ${{ secrets.github_token }}

      - name: Release
        uses: softprops/action-gh-release@v1

# - run: echo "::set-env name=VERSION::$(node dist/package-version.js)"
# path: release/icons-font-desktop-${{ env.VERSION }}.dmg
